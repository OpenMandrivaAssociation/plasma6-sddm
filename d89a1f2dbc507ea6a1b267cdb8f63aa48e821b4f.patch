From d89a1f2dbc507ea6a1b267cdb8f63aa48e821b4f Mon Sep 17 00:00:00 2001
From: Fabian Vogt <fabian@ritter-vogt.de>
Date: Thu, 4 Apr 2024 21:47:23 +0200
Subject: [PATCH] Use xrdb to set Xcursor.theme and Xcursor.size

Qt 6 switched to xcb-util-cursor which unlike libXcursor does not read
$XCURSOR_THEME and $XCURSOR_SIZE.
---
 src/daemon/XorgDisplayServer.cpp | 25 +++++++++++++++++++++++--
 src/helper/xorguserhelper.cpp    | 25 +++++++++++++++++++++++++
 2 files changed, 48 insertions(+), 2 deletions(-)

diff --git a/src/daemon/XorgDisplayServer.cpp b/src/daemon/XorgDisplayServer.cpp
index 5101cfb54..4a75662d4 100644
--- a/src/daemon/XorgDisplayServer.cpp
+++ b/src/daemon/XorgDisplayServer.cpp
@@ -261,6 +261,9 @@ namespace SDDM {
         // create display setup script process
         QProcess *displayScript = new QProcess();
 
+        const QString xcursorTheme = mainConfig.Theme.CursorTheme.get(),
+                      xcursorSize = mainConfig.Theme.CursorSize.get();
+
         // set process environment
         QProcessEnvironment env;
         env.insert(QStringLiteral("DISPLAY"), m_display);
@@ -268,8 +271,8 @@ namespace SDDM {
         env.insert(QStringLiteral("PATH"), mainConfig.Users.DefaultPath.get());
         env.insert(QStringLiteral("XAUTHORITY"), m_xauth.authPath());
         env.insert(QStringLiteral("SHELL"), QStringLiteral("/bin/sh"));
-        env.insert(QStringLiteral("XCURSOR_THEME"), mainConfig.Theme.CursorTheme.get());
-        QString xcursorSize = mainConfig.Theme.CursorSize.get();
+        if (!xcursorTheme.isEmpty())
+            env.insert(QStringLiteral("XCURSOR_THEME"), xcursorTheme);
         if (!xcursorSize.isEmpty())
             env.insert(QStringLiteral("XCURSOR_SIZE"), xcursorSize);
         setCursor->setProcessEnvironment(env);
@@ -287,6 +290,24 @@ namespace SDDM {
             setCursor->kill();
         }
 
+        // Unlike libXcursor, xcb-util-cursor no longer looks at XCURSOR_*. Set the resources.
+        if (!xcursorTheme.isEmpty() || !xcursorSize.isEmpty()) {
+            QProcess xrdbProcess;
+            xrdbProcess.setProcessEnvironment(env);
+            xrdbProcess.start(QStringLiteral("xrdb"), QStringList{QStringLiteral("-nocpp"), QStringLiteral("-merge")});
+            if (!xcursorTheme.isEmpty())
+                xrdbProcess.write(QStringLiteral("Xcursor.theme: %1\n").arg(xcursorTheme).toUtf8());
+
+            if (!xcursorSize.isEmpty())
+                xrdbProcess.write(QStringLiteral("Xcursor.size: %1\n").arg(xcursorSize).toUtf8());
+
+            xrdbProcess.closeWriteChannel();
+            if (!xrdbProcess.waitForFinished(1000)) {
+                qDebug() << "Could not set Xcursor resources" << xrdbProcess.error();
+                xrdbProcess.kill();
+            }
+        }
+
         // start display setup script
         qDebug() << "Running display setup script " << mainConfig.X11.DisplayCommand.get();
         QStringList displayCommand = QProcess::splitCommand(mainConfig.X11.DisplayCommand.get());
diff --git a/src/helper/xorguserhelper.cpp b/src/helper/xorguserhelper.cpp
index 3f564a2a5..65dbe1ebe 100644
--- a/src/helper/xorguserhelper.cpp
+++ b/src/helper/xorguserhelper.cpp
@@ -200,9 +200,16 @@ bool XOrgUserHelper::startServer(const QString &cmd)
 
 void XOrgUserHelper::startDisplayCommand()
 {
+    const QString xcursorTheme = mainConfig.Theme.CursorTheme.get(),
+                  xcursorSize = mainConfig.Theme.CursorSize.get();
+
     auto env = QProcessEnvironment::systemEnvironment();
     env.insert(QStringLiteral("DISPLAY"), m_display);
     env.insert(QStringLiteral("XAUTHORITY"), m_xauth.authPath());
+    if (!xcursorTheme.isEmpty())
+        env.insert(QStringLiteral("XCURSOR_THEME"), xcursorTheme);
+    if (!xcursorSize.isEmpty())
+        env.insert(QStringLiteral("XCURSOR_SIZE"), xcursorSize);
 
     // Set cursor
     qInfo("Setting default cursor...");
@@ -215,6 +222,24 @@ void XOrgUserHelper::startDisplayCommand()
         setCursor->deleteLater();
     }
 
+    // Unlike libXcursor, xcb-util-cursor no longer looks at XCURSOR_*. Set the resources.
+    if (!xcursorTheme.isEmpty() || !xcursorSize.isEmpty()) {
+        QProcess xrdbProcess;
+        xrdbProcess.setProcessEnvironment(env);
+        xrdbProcess.start(QStringLiteral("xrdb"), QStringList{QStringLiteral("-nocpp"), QStringLiteral("-merge")});
+        if (!xcursorTheme.isEmpty())
+            xrdbProcess.write(QStringLiteral("Xcursor.theme: %1\n").arg(xcursorTheme).toUtf8());
+
+        if (!xcursorSize.isEmpty())
+            xrdbProcess.write(QStringLiteral("Xcursor.size: %1\n").arg(xcursorSize).toUtf8());
+
+        xrdbProcess.closeWriteChannel();
+        if (!xrdbProcess.waitForFinished(1000)) {
+            qDebug() << "Could not set Xcursor resources" << xrdbProcess.error();
+            xrdbProcess.kill();
+        }
+    }
+
     // Display setup script
     auto cmd = mainConfig.X11.DisplayCommand.get();
     qInfo("Running display setup script: %s", qPrintable(cmd));
